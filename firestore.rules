rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // Allow reading other users' basic info
    }

    // Posts - allow authenticated users to read all posts, write their own
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Messages and conversations
    match /conversations/{conversationId} {
      // Allow read if user is a participant OR if checking for conversation existence
      allow read: if request.auth != null && (
        // User is a participant in existing conversation
        (resource != null && request.auth.uid in resource.data.participants) ||
        // Allow read for conversation existence check (resource will be null if doesn't exist)
        resource == null
      );

      // Allow write if user is a participant in the conversation
      allow write: if request.auth != null &&
        request.auth.uid in resource.data.participants;

      // Allow create if user is a participant in the new conversation
      allow create: if request.auth != null &&
        request.auth.uid in request.resource.data.participants;

      // Messages subcollection - simplified rules
      match /messages/{messageId} {
        // Allow read for any authenticated user (they can only query their own messages anyway)
        allow read: if request.auth != null;
        // Allow write if user is the sender or receiver of the message
        allow write: if request.auth != null &&
          (request.auth.uid == resource.data.senderId ||
           request.auth.uid == resource.data.receiverId);
        // Allow create if user is the sender
        allow create: if request.auth != null &&
          request.auth.uid == request.resource.data.senderId;
      }
    }

    // Comments on posts
    match /posts/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Likes on posts
    match /posts/{postId}/likes/{likeId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth != null && request.auth.uid == resource.id;
    }

    // Categories - read only for all authenticated users
    match /categories/{categoryId} {
      allow read: if request.auth != null;
    }
  }
}
